<!DOCTYPE html>
<html lang="en">
<?js
  if (this.layoutOptions.wantDate) {
    Date.prototype.toLongDate =
      function (locale) {
        return new Date().toLocaleDateString(locale || 'en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
      }
  }

  function toAssetLink(src) {
    const [ext] = (src.href || '').split('.').reverse()
    if (ext.toLowerCase() == 'css') {
       src.type = 'text/css'
       src.media = 'screen'
       src.rel = 'stylesheet'
    } else if (!src.type || !src.rel &&
        ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'ico'].includes(ext.toLowerCase())) {
       src.type = src.type || 'image/x-icon'
       src.rel = src.rel || 'shortcut icon'
    }
    return src
  }
?>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <?js if(this.meta !== undefined) { ?>
      <?js this.meta.forEach(function(src){ ?>
        <meta <?js=Object.keys(src).map(key => `${key}="${src[key]}"`).join(" ") ?>>
      <?js }) ?>
    <?js } ?>
    <title>
      <?js if (this.project !== undefined && this.project.title !== undefined) { ?>
      <?js= this.project.title ?> | <?js= title ?>
      <?js } else { ?>
      <?js= title ?>
      <?js } ?>
    </title>
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" media="screen" href="styles/jsdoc-default.css">
    <link type="text/css" rel="stylesheet" media="screen" href="styles/clean-jsdoc-theme-base.css">
    <link type="text/css" rel="stylesheet" media="screen" href="styles/clean-jsdoc-colorscheme.css">
    <link type="text/css" rel="stylesheet" media="screen" href="styles/<?js= this.theme ?>">

    <?js if(this.layoutOptions.wantOverlay) { ?>
    <link type="text/css" rel="stylesheet" media="screen" href="styles/third-party/OverlayScrollbars.min.css">
    <?js } ?>

    <?js if(this.externalAssets !== undefined) { ?>
      <?js this.externalAssets.forEach(src => { ?>
        <link <?js=Object.keys(src).map(key => `${key}="${toAssetLink(src)[key]}"`).join(" ") ?>>
      <?js }) ?>
    <?js } ?>

    <?js if(this.includeCss !== undefined) { ?>
      <?js this.includeCss.forEach(function(source){ ?>
        <link type="text/css" rel="stylesheet" href="<?js= source ?>">
      <?js }) ?>
    <?js } ?>

    <?js if (this.layoutOptions.noSearch) { ?>
      <style>
        nav > h2 {
            padding: 0;
        }
      </style>
    <?js } ?>
    <?js if (this.layoutOptions.hideLangNames) { ?>
      <style>
        .code-lang-name  {
            display: none;
        }
        .readme code {
            margin: 0;
        }
      </style>
    <?js } ?>

    <style>
      <?js
        const isTitleSet = env.opts && env.opts.theme_opts && env.opts.theme_opts.title
        const homeTitle = isTitleSet ? env.opts.theme_opts.title.trim() : title
        const headRoom = Math.ceil(homeTitle.length * 2.5)
      ?>
      .sidebar-list-div {
          margin-top: <?js= headRoom?>px;
      }
    </style>

    <?js if (this.dynamicStyle !== undefined ) { ?>
    <style>
      <?js= this.dynamicStyle ?>
    </style>
    <?js } ?>

    <?js if(this.dynamicScriptSrc !== undefined) { ?>
      <?js this.dynamicScriptSrc.forEach(function(src){ ?>
        <script <?js=Object.keys(src).map(key => `${key}="${src[key]}"`).join(" ") ?> ></script>
      <?js }) ?>
    <?js } ?>

    <?js if(this.includeScript !== undefined) { ?>
        <?js this.includeScript.forEach(function(source){ ?>
        <script src="<?js= source ?>"></script>
        <?js }) ?>
    <?js } ?>
</head>
<body>
<?js= this.partial('icons.tmpl') ?>

<nav id="navbar" class="navbar">
    <?js if (this.project !== undefined) { ?>
    <div class="gh-meta">
    <p><b>Version</b> <?js= this.project.version ?></p>
    <p>
      <a href="<?js= this.project.repo ?>" title="View project on Github"><span class="fa fa-github" aria-hidden="true"></span></a>
    </p>
    </div>
    <?js } ?>
    <?js= this.nav ?>
</nav>

<div class="navbar-ham" id="navbar-ham">
  <div data-test="navbar-ham-clickable">
    <div class="first"></div>
    <div class="second"></div>
    <div class="third"></div>
  </div>
</div>

<div id="main" class="main-content">
    <?js if (title.toLowerCase() !== 'home') { ?>
    <h1 class="page-title"><?js= title ?></h1>
    <?js } ?>
    <?js= content ?>
</div>

<footer id="footer" class="footer">
  <?js if (this.footer) { ?>
  <?js= this.footer ?>
  <?js } else { ?>
  Generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc <?js= env.version.number ?></a><?js if(this.layoutOptions.wantDate) { ?> on <?js= (new Date().toLongDate()) ?><?js } ?> using the <a href="https://github.com/rdipardo/clean-jsdoc-theme">clean-jsdoc</a> <?js= this.layoutOptions.themeName ?> theme.
  <?js } ?>
</footer>

<script src="scripts/third-party/prettify.min.js"></script>
<script src="scripts/third-party/lang-css.js"></script>
<script src="scripts/third-party/fuse.js"></script>
<script src="scripts/search.js" defer></script>
<script src="scripts/misc.js" defer></script>
<script>prettyPrint();</script>
<script src="scripts/linenumber.js" defer></script>
<script src="scripts/fix-code-block.js" defer></script>
<script src="scripts/fix-navbar.js" defer></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
      if (document.getElementById('search-box')) {
          var list = [<?js= this.searchList ?>];
          setupSearch(list)
      }
})
</script>

<?js if(this.layoutOptions.wantOverlay) { ?>
<script src="scripts/third-party/OverlayScrollbars.min.js"></script>
<script>
  var options = JSON.parse('<?js= this.overlayScrollbar ?>')
  var parsedOpts = []
  for (var opt in options) {
      parsedOpts.push(opt + ' = ' + options[opt.toString()])
  }
  console.log('Loaded OverlayScrollbars.js with options:', parsedOpts.join(', ') || 'none')
  document.addEventListener("DOMContentLoaded", function () {
      OverlayScrollbars(document.querySelectorAll('body'), options)
  })
</script>
<?js } ?>

<?js if (this.dynamicScript !== undefined ) { ?>
<script>
  <?js= this.dynamicScript ?>
</script>
<?js } ?>

<script>
    function replaceIcon() {
        var metaField = document.querySelector('.gh-meta')
        var iconField = document.querySelector('.gh-meta p ~ p')
        var icon = document.querySelector('.fa.fa-github')
        icon.style.fontSize = 'initial'
        icon.style.display = 'inline-block'
        icon.style.margin = '1rem 0'
        icon.style. padding = "0 .75em"
        icon.style.fontWeight = 700
        icon.innerText = 'Homepage'
        iconField.style.margin = '0'
    }

    var fa = document.createElement('link')
    fa.href = 'https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'
    fa.rel = 'stylesheet'
    fa.type = 'text/css'
    fa.onerror = replaceIcon
    var style = document.getElementsByTagName('link')[0]
    style.parentNode.insertBefore(fa, style)
</script>
</body>
</html>
